"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbstractEncodableBitStringSection=void 0;class AbstractEncodableBitStringSection{constructor(e,t){this.fields=e,this.fieldOrder=t}hasField(e){return this.fields.has(e)}getFieldValue(e){return this.fields.has(e)?this.fields.get(e).getValue():null}setFieldValue(e,t){if(!this.fields.has(e))throw new Error(e+" not found");this.fields.get(e).setValue(t)}getFieldOrder(){return this.fieldOrder}encodeToBitString(){let e="";for(let t=0;t<this.fieldOrder.length;t++){let i=this.fieldOrder[t];if(!this.fields.has(i))throw new Error("Field not found: '"+i+"'");e+=this.fields.get(i).encode()}return e}decodeFromBitString(e){let t=0;for(let i=0;i<this.fieldOrder.length;i++){let r=this.fieldOrder[i];if(!this.fields.has(r))throw new Error("Field not found: '"+r+"'");{let i=this.fields.get(r),s=i.substring(e,t);i.decode(s),t+=s.length}}}toObj(){let e={};for(let t=0;t<this.fieldOrder.length;t++){let i=this.fieldOrder[t];if(this.fields.has(i)){let t=this.fields.get(i).getValue();e[i]=t}}return e}}exports.AbstractEncodableBitStringSection=AbstractEncodableBitStringSection;