"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbstractEncodableSegmentedBitStringSection=void 0;class AbstractEncodableSegmentedBitStringSection{constructor(e,t){this.fields=e,this.segments=t}hasField(e){return this.fields.has(e)}getFieldValue(e){return this.fields.has(e)?this.fields.get(e).getValue():null}setFieldValue(e,t){if(!this.fields.has(e))throw new Error(e+" not found");this.fields.get(e).setValue(t)}getSegments(){return this.segments}encodeSegmentsToBitStrings(){let e=[];for(let t=0;t<this.segments.length;t++){let s="";for(let e=0;e<this.segments[t].length;e++){let n=this.segments[t][e];if(!this.fields.has(n))throw new Error("Field not found: '"+n+"'");try{s+=this.fields.get(n).encode()}catch(e){throw new Error("Unable to encode "+n)}}e.push(s)}return e}decodeSegmentsFromBitStrings(e){for(let t=0;t<this.segments.length&&t<e.length;t++){let s=e[t];if(s&&s.length>0){let e=0;for(let n=0;n<this.segments[t].length;n++){let i=this.segments[t][n];if(!this.fields.has(i))throw new Error("Field not found: '"+i+"'");try{let t=this.fields.get(i),n=t.substring(s,e);t.decode(n),e+=n.length}catch(e){throw new Error("Unable to decode "+i)}}}}}toObj(){let e={};for(let t=0;t<this.segments.length;t++)for(let s=0;s<this.segments[t].length;s++){let n=this.segments[t][s];if(this.fields.has(n)){let t=this.fields.get(n).getValue();e[n]=t}}return e}}exports.AbstractEncodableSegmentedBitStringSection=AbstractEncodableSegmentedBitStringSection;